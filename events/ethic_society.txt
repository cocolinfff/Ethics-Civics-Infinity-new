namespace = ethic_society

# 社会状态更新（国家月检与触发）
country_event = {
    id = ethic_society.0
    is_triggered_only = yes
    hide_window = yes
    immediate = {

		# 星球月检事件触发
		every_owned_planet = {
			if = {
				limit = {
					AND = {
						is_colony = yes
						is_under_colonization = no
					}
				}
				planet_event = { id = ethic_society.1 }
			}
		}

		# 贸易额检测
		eci_primitive_trade = yes

		# 通货膨胀buff
		if = {
			limit = {
				OR = {
					is_ai = no
					has_valid_civic = civic_triple_the_profit
				}
			}
			set_variable = { which = society_trade_value_target_country value = value:society_trade_value_reduction }
			if = {
				limit = {
					owner = { is_market_type = yes }
					check_variable = { which = society_trade_value_target_country value > 0 }
				}
				remove_modifier = trade_value_reduction_modifier_2
				add_modifier = {
					modifier = trade_value_reduction_modifier
					multiplier = society_trade_value_target_country
					clear_on_owner_change = yes
				}
			}
			if = {
				limit = {
					owner = { is_market_type = yes }
					check_variable = { which = society_trade_value_target_country value > -1 }
					check_variable = { which = society_trade_value_target_country value < 0 }
				}
				remove_modifier = trade_value_reduction_modifier
				add_modifier = {
					modifier = trade_value_reduction_modifier_2
					multiplier = society_trade_value_target_country
					clear_on_owner_change = yes
				}
			}
			if = {
				limit = {
					owner = { is_market_type = yes }
					check_variable = { which = society_trade_value_target_country value <= -1 }
				}
				remove_modifier = trade_value_reduction_modifier
				add_modifier = {
					modifier = trade_value_reduction_modifier_2
					multiplier = -1
					clear_on_owner_change = yes
				}
			}
			if = {
				limit = {
					owner = { is_market_type = no }
				}
				remove_modifier = trade_value_reduction_modifier
				remove_modifier = trade_value_reduction_modifier_2
			}
		}
    }
}

# 社会状态更新（星球月检与触发）
planet_event = {
	id = ethic_society.1
    is_triggered_only = yes
    hide_window = yes
    immediate = {

		# 星球飞升检测
		set_variable = { which = num_ethic_planetary_ascension_tier value = value:num_ethic_planetary_ascension_tier }
		set_variable = { which = num_planetary_ascension_effect_mult value = value:num_planetary_ascension_effect_mult }
		set_variable = { which = ethic_planetary_ascension_tier value = value:ethic_planetary_ascension_tier }
		if = {
			limit = { count_deposits = { type = d_planetary_ascension count > 1 } }
			remove_deposit = d_planetary_ascension
		}
		if = {
			limit = {
				has_planetary_ascension_tier >= 1
				NOT = { has_deposit = d_planetary_ascension }
			}
			add_deposit = d_planetary_ascension
		}

		# 数据处理地块
		if = {
			limit = { count_deposits = { type = d_ethic_society count > 1 } }
			remove_deposit = d_ethic_society
		}
		if = {
			limit = { NOT = { has_deposit = d_ethic_society } }
			add_deposit = d_ethic_society
		}
		if = {
			limit = { NOT = { has_deposit = d_ethic_primitive_trade } }
			add_deposit = d_ethic_primitive_trade
		}

		# 星球人口舒适度使用检测
		set_variable = { which = society_amenities_usage value = value:society_amenities_usage }

		# 岗位转换检测
		ethic_rentier_variable = yes
		if = {
			limit = { owner = { has_valid_civic = civic_military_dictatorship } }
			ethic_commandante_to_knight_commander_variable = yes
		}
		if = {
			limit = { owner = { has_valid_civic = civic_righteous_fury } }
			ethic_enforcer_to_media_worker_variable = yes
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_wizarding_world
						has_civic = civic_dark_consortium
					}
				}
			}
			ethic_wizarding_world_legendary_mage_variable = yes
			ethic_wizarding_world_magician_variable = yes
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_valid_civic = civic_world_cooperative
						has_valid_civic = civic_worker_coop
					}
				}
			}
			ethic_manager_to_steward_variable = yes
		}
		if = {
			limit = {
				planet = {
					NOT = { has_planet_flag = private_commercial_is_building }
					free_building_slots >= 1
					NOT = { has_planet_flag = branch_closed_cooldown_planet }
				}
				owner = {
					is_regular_empire = yes
					OR = {
						AND = {
							is_market_type = yes
							has_policy_flag = mixed_ownership
						}
						has_policy_flag = private_ownership
						has_policy_flag = family_ownership
					}
				}
				OR = {
					owner = { is_ai = no }
					planet = { num_unemployed > 0 }
				}
			}
			#random_list = {
			#	49 = {}
			#	1 = {
			#		add_building = building_private_commercial_megaplex
			#	}
			#}
			set_planet_flag = private_commercial_is_building
			planet_event = { id = ethic_society.10000 days = 1080 random = 720 }
		}

		# 星球领袖负面特质检测
		if = {
			limit = { owner = { has_valid_civic = civic_Joker } }
			set_variable = {
				which = planet_leader_num_negative_traits
				value = planet.leader.value:planet_leader_num_negative_traits
			}
		}

    }
}

# 解除动员状态
country_event = {
	id = ethic_society.2
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		is_at_war = no
		has_crisis = no
		any_owned_planet = {
			OR = {
				has_modifier = modifier_mobilization_1
				has_modifier = modifier_mobilization_2
				has_modifier = modifier_mobilization_3
				has_modifier = modifier_mobilization_4
			}
		}
	}
	immediate = {
		every_owned_planet = {
			remove_modifier = modifier_mobilization_1
			remove_modifier = modifier_mobilization_2
			remove_modifier = modifier_mobilization_3
			remove_modifier = modifier_mobilization_4
		}
		every_owned_pop = {
			remove_modifier = modifier_mobilization_pop_1
			remove_modifier = modifier_mobilization_pop_2
			remove_modifier = modifier_mobilization_pop_3
			remove_modifier = modifier_mobilization_pop_4
		}
		every_owned_army = {
			limit = {
				OR = {
					army_type = conscript_army
					army_type = robotic_conscript_army
					army_type = robotic_conscript_army_2
					army_type = robotic_conscript_army_3
					army_type = psionic_conscript_army
					army_type = clone_conscript_army
					army_type = undead_conscript_army
					army_type = slave_conscript_army
					army_type = thrall_conscript_army
					army_type = militia_army
					army_type = psionic_militia_army
					army_type = knight_warband
					army_type = gene_knight_warband
					army_type = magic_knight_warband
					army_type = cyber_knight_warband
					army_type = steel_knight_warband
					army_type = squire_warband
					army_type = steel_squire_warband
					army_type = cyber_squire_warband
					army_type = gene_squire_warband
					army_type = magic_squire_warband
				}
			}
			if = {
				limit = {
					exists = leader
				}
				leader = {
					unassign_leader = this
				}
			}
			remove_army = yes
		}
	}
}

# 私人军事承包商
planet_event = {
	id = ethic_society.3
	title = ethic_society.3.name
	diplomatic = yes
	picture_event_data = {
		portrait = root.owner
		room = mercenary_enclave_room
	}

	is_triggered_only = yes

	desc = enclave.270.desc

	#Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
	}

	# Small Army
	option = {
		name = enclave.270.a
		allow = {
			owner = {
				resource_stockpile_compare = { resource = energy value >= 600 }
			}
		}
		owner = {
			add_resource = { energy = -600  }
		}
		custom_tooltip = small_merc_army_hire
		add_modifier = {
			modifier = modifier_mercenaries
			days = 3600
		}
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root.owner
					while = {
						count = 5
						create_army_transport = {
							army_type = "mercenary_army"
							army_name = "NAME_military_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root
					}
				}
			}
		}
	}

	# Small Mecha Army
	option = {
		name = enclave.270.b
		trigger = {
			has_major_upgraded_capital = yes
		}
		allow = {
			owner = {
				resource_stockpile_compare = { resource = energy value >= 1200 }
			}
		}
		owner = {
			add_resource = { energy = -1200 }
		}
		custom_tooltip = small_mecha_merc_army_hire
		add_modifier = {
			modifier = modifier_mercenaries
			days = 3600
		}
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root.owner
					while = {
						count = 5
						create_army_transport = {
							army_type = "mecha_army"
							army_name = "NAME_mechawarrior_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root
					}
				}
			}
		}
	}

	# Medium Army
	option = {
		name = enclave.270.c
		trigger = {
			has_major_upgraded_capital = yes
		}
		allow = {
			owner = {
				resource_stockpile_compare = { resource = energy value >= 1100 }
			}
		}
		owner = {
			add_resource = { energy = -1100 }
		}
		custom_tooltip = medium_merc_army_hire
		add_modifier = {
			modifier = modifier_mercenaries
			days = 3600
		}
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root.owner
					while = {
						count = 10
						create_army_transport = {
							army_type = "mercenary_army"
							army_name = "NAME_military_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root
					}
				}
			}
		}
	}

	# Medium Mecha Army
	option = {
		name = enclave.270.d
		trigger = {
			has_fully_upgraded_capital = yes
		}
		allow = {
			owner = {
				resource_stockpile_compare = { resource = energy value >= 2300 }
			}
		}
		owner = {
			add_resource = { energy = -2300 }
		}
		custom_tooltip = medium_mecha_merc_army_hire
		add_modifier = {
			modifier = modifier_mercenaries
			days = 3600
		}
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root.owner
					while = {
						count = 10
						create_army_transport = {
							army_type = "mecha_army"
							army_name = "NAME_mechawarrior_contractors"
							species = event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root
					}
				}
			}
		}
	}

	# Large Army
	option = {
		name = enclave.270.e
		trigger = {
			has_fully_upgraded_capital = yes
		}
		allow = {
			owner = {
				resource_stockpile_compare = { resource = energy value >= 2000 }
			}
		}
		owner = {
			add_resource = { energy = -2000 }
		}
		custom_tooltip = large_merc_army_hire
		add_modifier = {
			modifier = modifier_mercenaries
			days = 3600
		}
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root.owner
					while = {
						count = 15
						create_army_transport = {
							army_type = "mercenary_army"
							army_name = "NAME_military_contractors"
							species =event_target:mercenary_enclave_species
						}
					}
					set_location = {
						target = root
					}
				}
			}
		}
	}
}

planet_event = {
	id = ethic_society.4
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = {
			is_ai = yes
			has_origin = origin_wizarding_world
		}
	}

	immediate = {
		add_modifier = { modifier = "ley_rift" days = -1 }
	}
}

country_event = {
	id = ethic_society.5
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_pacifist = yes
		is_at_war = yes
		any_war = {
			any_defender = {
				is_same_value = this
			}
		}
	}

	immediate = {
		if = {
			limit = { has_ethic = ethic_fanatic_pacifist }
			add_modifier = { modifier = fanatic_pacifist_defensive_wars_modifier days = -1 }
		}
		if = {
			limit = { has_ethic = ethic_pacifist }
			add_modifier = { modifier = pacifist_defensive_wars_modifier days = -1 }
		}
	}
}
country_event = {
	id = ethic_society.6
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_pacifist = yes
				is_at_war = no
			}
			remove_modifier = fanatic_pacifist_defensive_wars_modifier
			remove_modifier = pacifist_defensive_wars_modifier
		}
		if = {
			limit = {
				any_owned_planet = {
					OR = {
						has_modifier = modifier_mobilization_1
						has_modifier = modifier_mobilization_2
						has_modifier = modifier_mobilization_3
						has_modifier = modifier_mobilization_4
					}
				}
			}
			remove_modifier = modifier_mobilization_1
			remove_modifier = modifier_mobilization_2
			remove_modifier = modifier_mobilization_3
			remove_modifier = modifier_mobilization_4
		}
		if = {
			limit = {
				any_owned_pop = {
					OR = {
						has_modifier = modifier_mobilization_pop_1
						has_modifier = modifier_mobilization_pop_2
						has_modifier = modifier_mobilization_pop_3
						has_modifier = modifier_mobilization_pop_4
					}
				}
			}
			remove_modifier = modifier_mobilization_pop_1
			remove_modifier = modifier_mobilization_pop_2
			remove_modifier = modifier_mobilization_pop_3
			remove_modifier = modifier_mobilization_pop_4
		}
	}
}
country_event = {
	id = ethic_society.7
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_at_war = yes
	}

	immediate = {
		if = {
			limit = {
				is_pacifist = yes
				any_war = {
					any_defender = {
						is_same_value = this
					}
				}
			}
			if = {
				limit = { has_ethic = ethic_fanatic_pacifist }
				add_modifier = { modifier = fanatic_pacifist_defensive_wars_modifier days = -1 }
			}
			if = {
				limit = { has_ethic = ethic_pacifist }
				add_modifier = { modifier = pacifist_defensive_wars_modifier days = -1 }
			}
		}
		if = {
			limit = {
				is_pacifist = no
				OR =  {
					has_modifier = fanatic_pacifist_defensive_wars_modifier
					has_modifier = pacifist_defensive_wars_modifier
				}
			}
			remove_modifier = fanatic_pacifist_defensive_wars_modifier
			remove_modifier = pacifist_defensive_wars_modifier
		}
	}
}

planet_event = {
	id = ethic_society.10000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				planet = {
					free_building_slots >= 1
					NOT = { has_planet_flag = branch_closed_cooldown_planet }
				}
				owner = {
					is_regular_empire = yes
					OR = {
						AND = {
							is_market_type = yes
							has_policy_flag = mixed_ownership
						}
						has_policy_flag = private_ownership
						has_policy_flag = family_ownership
					}
				}
				OR = {
					owner = { is_ai = no }
					planet = { num_unemployed > 0 }
				}
			}
			add_deposit = d_ethic_private_commercial_t2N
			remove_planet_flag = private_commercial_is_building
		}
	}
}