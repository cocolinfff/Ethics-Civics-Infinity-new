namespace = ethic_paragon

country_event = { # socialism 1
    id = ethic_paragon.51000
    title = "ethic_paragon.51000.name"
    desc = "ethic_paragon.51000.desc"
    show_sound = par_portrait_07
    is_triggered_only = yes

    picture = GFX_leader_recruitment_bg_renowned
    auto_opens = no
    event_window_type = leader_recruit
    notification_event_icon = "GFX_message_leader_recruitment_borin"

    immediate = {
        ethic_leader_creator = {
            SPECIES_CLASS = random_non_machine
            LEADER_PORTRAIT = ethic_par_01 #socialism_leader
            CLASS = official
            NAME = NAME_socialism1
            LEVEL = 4
            GENDER = male
            IMMORTAL = no
            ETHIC = egalitarian
            DESC = socialism1
            CATCH_PHRASE = socialism1_catch_phrase
        }
        last_created_leader = {
            add_trait = leader_trait_utopian_idealist
            add_trait = subclass_governor_economist
            add_trait = leader_trait_agrarian_upbringing_2
            add_trait = leader_trait_mining_focus
            add_trait = leader_trait_architectural_interest
            set_age = 40
        }
    }

    picture_event_data = {
        portrait = event_target:ethic_leader
        room = ethic_spaceship_room
    }

    option = {
        name = DISMISS
        tag = dismiss_leader
        hidden_effect = {
            remove_global_flag = socialism_leader_1
            ethic_leader_kill_effect = yes
            set_country_flag = dismissed_socialism_leader_1
        }
    }
    option = {
        name = ethic_paragon.51000.a
        response_text = ethic_paragon.51000.a.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.51000.b
        response_text = ethic_paragon.51000.b.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.51000.c
        response_text = ethic_paragon.51000.c.response
        is_dialog_only = yes
    }
    option = {
        name = HIRE
        tag = hire_leader
        custom_tooltip = ethic_paragon.51000.hire_custom_tooltip
        hidden_effect = {
            ethic_leader_hire_effect = {
                GLOBAL_EVENT_TARGET = renowned_socialism1
            }
        }
    }
}

country_event = { # socialism 2
    id = ethic_paragon.52000
    title = "ethic_paragon.52000.name"
    desc = "ethic_paragon.52000.desc"
    show_sound = par_portrait_07
    is_triggered_only = yes

    picture = GFX_leader_recruitment_bg_renowned
    auto_opens = no
    event_window_type = leader_recruit
    notification_event_icon = "GFX_message_leader_recruitment_borin"

    picture_event_data = {
        portrait = event_target:teacher
        room = ethic_spaceship_room
    }

    option = {
        name = ethic_paragon.52000.f
        tag = dismiss_leader
        custom_tooltip = ethic_paragon.52000.hire_custom_tooltip
    }
    option = {
        name = ethic_paragon.52000.a
        response_text = ethic_paragon.52000.a.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.b
        response_text = ethic_paragon.52000.b.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.c
        response_text = ethic_paragon.52000.c.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.d
        response_text = ethic_paragon.52000.d.response
        is_dialog_only = yes
    }
    option = {
        name = ethic_paragon.52000.e
        tag = hire_leader
        custom_tooltip = ethic_paragon.52000.e_custom_tooltip
        add_resource = {
            energy = -100
            influence = -20
        }
        hidden_effect = {
            event_target:primitive_civ = {
                shift_ethic = ethic_fanatic_egalitarian
            }
        }
    }
}


country_event = {
    id = ethic_paragon.41234
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        has_paragon_dlc = yes
    }

    immediate = {
        random_owned_leader = {
            limit = { has_leader_flag = renowned_leader }
            switch = {
                trigger = has_leader_flag
                renowned_socialism1 = { # Nasuz Demetor
                    random_list = {
                        10 = { leader_event = { id = ethic_paragon.51010 days = 1 random = 1800 } }
                        10 = { leader_event = { id = ethic_paragon.51020 days = 1 random = 1800 } }
                        80 = {}
                    }
                }
            }
        }
    }
}

# Shui Wa / socialism1
leader_event = {
    id = ethic_paragon.51010
    title = ethic_paragon.51010.name
    desc = ethic_paragon.51010.desc
    picture = GFX_evt_ship_in_orbit
    show_sound = event_default
    is_triggered_only = yes
    fire_only_once = yes

    event_window_type = leader_story
    event_picture_background = "GFX_leader_recruitment_bg_renowned"

    picture_event_data = {
        portrait = root
    }

    option = {
        name = ethic_paragon.51010.a
        owner = {
            if = {
                limit = {
                    has_utopia = yes
                    NOR = {
                        has_technology = tech_mega_engineering
                        is_researching_technology = tech_mega_engineering
                        has_tech_option = tech_mega_engineering
                    }
                }
                add_research_option = tech_mega_engineering
                add_tech_progress = {
                    tech = tech_mega_engineering
                    progress = 0.05
                }
            }
            else = {
                add_monthly_resource_mult = {
                    resource = engineering_research
                    value = @tier5researchreward
                    min = @tier5researchmin
                    max = @tier5researchmax
                }
            }
            hidden_effect = {
                create_species = {
                    name = "PRESCRIPTED_species_name_humans1"
                    plural = "PRESCRIPTED_species_plural_humans1"
                    adjective = "PRESCRIPTED_species_adjective_humans1"
                    class = HUM
                    portrait = human_legacy
                    gender = male
                    traits = {
                        ideal_planet_class = capital_scope
                        trait = "trait_adaptive"
                        trait = "trait_communal"
                        trait = "trait_deviants"
                    }
                }
                create_leader = {
                    species = last_created_species
                    name = "LUHAI_NAME"
                    custom_description = "LUHAI_DESC"
                    class = scientist
                    set_age = 52
                    skill = 4
                    randomize_traits = yes
                    background_ethic = ethic_materialist
                    effect = {
                        save_event_target_as = human_luhai
                    }
                }
                event_target:human_luhai = {
                    add_trait_no_notify = subclass_scientist_researcher
                    add_trait_no_notify = leader_trait_expertise_materials_2
                    add_trait_no_notify = leader_trait_experimenter
                    set_owner = prev
                }
                hire_event_leader_message = {
                    LEADER = human_luhai
                }
            }
        }
        custom_tooltip = ethic_paragon.51010.a.custom_tooltip
    }

    option = {
        name = ethic_paragon.51010.b
    }
}
leader_event = {
    id = ethic_paragon.51020
    title = ethic_paragon.51020.name
    desc = ethic_paragon.51020.desc
    picture = GFX_evt_ship_in_orbit
    show_sound = event_default
    is_triggered_only = yes
    fire_only_once = yes

    event_window_type = leader_story
    event_picture_background = "GFX_leader_recruitment_bg_renowned"

    picture_event_data = {
        portrait = root
    }

    option = {
        name = paragon.3160.f
        hidden_effect = {
            add_experience = 10000
        }
        custom_tooltip = ethic_paragon.51020.a.custom_tooltip
    }

    option = {
        name = paragon.3160.d
        hidden_effect = {
            hidden_effect = { unassign_leader = this }
            remove_all_traits = yes
            change_leader_class = scientist
            set_skill = 1
            add_experience = 54000
            add_trait = leader_trait_deep_space_explorer
            add_trait = subclass_scientist_explorer
        }
        custom_tooltip = ethic_paragon.51020.b.custom_tooltip
    }
}

namespace = ethic_rural_teachers

# Initializing MTTH event
ship_event = {
    id = ethic_rural_teachers.1
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = { has_global_flag = ethic_rural_teachers_offered }
        owner = {
            is_ai = no
            NOT = { has_country_flag = ethic_rural_teachers_offered_quest }
            is_egalitarian = yes
            from = {
                owner = {
                    is_regular_pre_ftl = yes
                    is_gestalt = no
                    NOT = { has_ethic = ethic_fanatic_egalitarian }
                    current_awareness_level < high
                    OR = {
                        has_pre_ftl_age = steam_age
                        has_pre_ftl_age = industrial_age
                        has_pre_ftl_age = machine_age
                        has_pre_ftl_age = atomic_age
                        has_pre_ftl_age = early_space_age
                    }
                }
            }
        }
    }

    immediate = {
        from = {
            save_event_target_as = the_planet
        }
        from.owner = {
            save_event_target_as = primitive_civ
        }
        owner = {
            set_country_flag = ethic_rural_teachers_offered_quest
            set_country_flag = ethic_rural_teachers_planting_on@root
            country_event = {
                id = ethic_rural_teachers.2
                days = 360
                random = 720
            }
        }
    }
}

# Proposing the experiment
country_event = {
    id = ethic_rural_teachers.2
    title = ethic_rural_teachers.2.name
    desc = ethic_rural_teachers.2.desc

    is_triggered_only = yes

    picture = GFX_evt_alien_abduction
    location = from.capital_scope
    show_sound = event_sensor_ping

    option = {
        name = ethic_rural_teachers.2.a

        trigger = {
            NOT = { has_ethic = ethic_fanatic_xenophobe }
        }

        hidden_effect = {
            event_target:primitive_civ = {
                country_event = {
                    id = ethic_rural_teachers.3
                    days = 720
                    random = 540
                }
            }
        }
    }

    option = {
        name = NOTIME
        add_resource = {
            influence = 50
        }
        hidden_effect = {
            event_target:primitive_civ = {
                random_situation = {
                    limit = {
                        is_situation_type = pre_ftl_tech_progress_situation
                    }
                    remove_situation_flag = has_ongoing_observation_event_chain
                }
            }
        }
    }
}

# Pingback on the country to decide the outcome and roll.
country_event = {
    id = ethic_rural_teachers.3
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        save_event_target_as = primitive_civ
        capital_scope = {
            save_event_target_as = primitive_planet
            observation_outpost_owner = {
                country_event = {
                    id = ethic_rural_teachers.4
                }
            }
        }
    }
}

# Quest proposition
country_event = {
    id = ethic_rural_teachers.4
    title = ethic_rural_teachers.4.name
    desc = ethic_rural_teachers.4.desc

    is_triggered_only = yes

    picture = GFX_evt_acquire_asset
    show_sound = event_sensor_ping
    location = from.capital_scope

    immediate = {
        # log = "From is [From.GetName]"
        # log = "From.Species is [From.Species.GetName]"
        event_target:primitive_civ = {
            create_saved_leader = {
                key = ethic_rural_teachers_leader
                event_leader = yes
                class = scientist
                species = from.species
                custom_catch_phrase = socialism2_catch_phrase
                custom_description = socialism2

                effect = {
                    save_event_target_as = teacher
                    set_leader_flag = renowned_leader
                    change_background_ethic = ethic_egalitarian
                    change_background_job = teacher
                    add_trait = leader_trait_knowledge_for_the_masses
                    add_trait = leader_trait_physics_focus_3
                    IF = {
                        limit = { is_lithoid = no }
                        set_age = 30
                    }
                    ELSE = {
                        set_age = 50
                    }
                    set_owner = root
                }
            }
        }
        if = {
            limit = {
                from = {
                    NOT = { current_awareness_level = full }
                }
            }
            set_country_flag = engineering_insights
            set_predictive_observation_insight = {
                VALUE = 10
            }
        }
    }

    option = {
        name = ethic_rural_teachers.4.a
        trigger = {
            OR = {
                NOT = { has_ethic = ethic_fanatic_xenophobe }
                has_ethic = ethic_fanatic_pacifist
            }
        }
        from.capital_scope = {
            enable_special_project = {
                name = ETHIC_RURAL_TEACHERS_PROJECT
                location = THIS
                owner = ROOT
            }
        }
    }

    option = {
        name = ethic_rural_teachers.4.b
        trigger = {
            NOR = {
                has_ethic = ethic_fanatic_pacifist
                has_ethic = ethic_fanatic_xenophile
            }
        }
        hidden_effect = {
            event_target:primitive_civ = {
                random_situation = {
                    limit = {
                        is_situation_type = pre_ftl_tech_progress_situation
                    }
                    remove_situation_flag = has_ongoing_observation_event_chain
                }
            }
        }
    }

    after = {
        if = {
            limit = {
                from = {
                    NOT = { current_awareness_level = full }
                }
            }
            add_observation_insight_effect = {
                VALUE = 10
                OUTPOST = from.capital_scope.observation_outpost
            }
        }
    }
}

# Project completion
ship_event = {
    id = ethic_rural_teachers.5
    title = ethic_rural_teachers.5.name
    desc = ethic_rural_teachers.5.desc

    is_triggered_only = yes

    location = event_target:primitive_planet
    show_sound = event_sensor_ping
    picture = GFX_evt_alien_abduction

    option = {
        name = ethic_rural_teachers.5.a

        owner = {
            hidden_effect = {
                activate_saved_leader = {
                    key = ethic_rural_teachers_leader
                }
                country_event = { id = ethic_paragon.52000 days = 1 }
            }
        }

        hidden_effect = {
            set_global_flag = ethic_rural_teachers_offered
            event_target:primitive_civ = {
                random_situation = {
                    limit = {
                        is_situation_type = pre_ftl_tech_progress_situation
                    }
                    remove_situation_flag = has_ongoing_observation_event_chain
                }
            }
        }
    }
}

namespace = ethic_royal_family

country_event = { # 国王继位
    id = ethic_royal_family.1
    title = "ethic_royal_family.1.title"
    desc = "ethic_royal_family.1.desc"
    is_triggered_only = yes

    trigger = {
        from = {
            is_councilor_type = councilor_king
        }
    }

    picture = GFX_evt_coronation

    immediate = {
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                save_event_target_as = heirname
            }
        }
        else_if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
                save_event_target_as = heirname
            }
        }
        else = {
            generate_random_royalty = yes
            last_created_leader = {
                save_event_target_as = heirname
            }
        }
        event_target:heirname = {
            remove_trait = leader_trait_eci_royalty
            remove_trait = leader_trait_eci_heir
            add_trait_no_notify = leader_trait_eci_king
            set_council_position = councilor_king
        }
    }

    option = {
        name = ethic_royal_family.1.a
        custom_tooltip = ethic_royal_family.1.tooltip
    }
}

country_event = { # 挑选继承人
    id = ethic_royal_family.2
    title = "ethic_royal_family.2.title"
    desc = {
        text = "ethic_royal_family.2.desc"
        trigger = {
            any_owned_leader = {
                is_pool_leader = no
                is_ruler = no
                NOT = { has_leader_flag = generated }
                has_trait = leader_trait_eci_royalty
            }
        }
    }
    desc = {
        text = "ethic_royal_family.2.desc.noleader"
        trigger = {
            NOT = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    NOT = { has_leader_flag = generated }
                    has_trait = leader_trait_eci_royalty
                }
            }
        }
    }
    is_triggered_only = yes

    picture = GFX_evt_throne_room

    immediate = {
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                }
                save_event_target_as = heir1
                set_leader_flag = heir1
            }
        }
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOT = {
                        has_leader_flag = heir1
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOT = {
                        has_leader_flag = heir1
                    }
                }
                save_event_target_as = heir2
                set_leader_flag = heir2
            }
        }
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                    }
                }
                save_event_target_as = heir3
                set_leader_flag = heir3
            }
        }
        if = {
            limit = {
                any_owned_leader = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                        has_leader_flag = heir3
                    }
                }
            }
            random_owned_leader = {
                limit = {
                    is_pool_leader = no
                    is_ruler = no
                    has_trait = leader_trait_eci_royalty
                    NOR = {
                        has_leader_flag = heir1
                        has_leader_flag = heir2
                        has_leader_flag = heir3
                    }
                }
                save_event_target_as = heir4
                set_leader_flag = heir4
            }
        }
        if = {
            limit = {
                NOT = {
                    exists = event_target:heir1
                }
            }
            generate_random_royalty = yes
            last_created_leader = {
                set_leader_flag = generated
                save_event_target_as = heir1
            }
        }
    }

    option = {
        trigger = {
            exists = event_target:heir1
        }
        name = ethic_royal_family.2.a
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir1 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            exists = event_target:heir2
        }
        name = ethic_royal_family.2.b
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir2 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            exists = event_target:heir3
        }
        name = ethic_royal_family.2.c
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir3 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            exists = event_target:heir4
        }
        name = ethic_royal_family.2.d
        if = {
            limit = {
                any_owned_leader = {
                    has_trait = leader_trait_eci_heir
                }
            }
            random_owned_leader = {
                limit = {
                    has_trait = leader_trait_eci_heir
                }
                remove_trait = leader_trait_eci_heir
                add_trait_no_notify = leader_trait_eci_royalty
            }
        }
        event_target:heir4 = {
            remove_trait = leader_trait_eci_royalty
            add_trait_no_notify = leader_trait_eci_heir
        }
    }
    option = {
        trigger = {
            any_owned_leader = {
                has_trait = leader_trait_eci_heir
            }
        }
        name = ethic_royal_family.2.e
    }
    after = {
        every_owned_leader = {
            remove_leader_flag = heir1
            remove_leader_flag = heir2
            remove_leader_flag = heir3
            remove_leader_flag = heir4
            remove_leader_flag = generated
        }
    }
}

country_event = { # 挑选继承人
    id = ethic_royal_family.3
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_civic = civic_constitutional_monarchy
        NOT = {
            any_owned_leader = {
                has_trait = leader_trait_eci_heir
            }
        }
    }

    immediate = {
        country_event = { id = ethic_royal_family.2 }
    }
}

country_event = {
    id = ethic_royal_family.5
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_civic = civic_constitutional_monarchy
    }

    immediate = {
        from = {
            if = {
                limit = {
                    is_same_species = root.owner_main_species
                }
                random_list = {
                    4 = {}
                    1 = {
                        add_trait_no_notify = leader_trait_eci_royalty
                    }
                }
            }
        }
    }
}