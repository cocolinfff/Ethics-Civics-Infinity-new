#协调者
coordinator = {
    category = complex_drone

    swappable_data = {
        default = {
            condition_string = DRONE_JOB_TRIGGER
            building_icon = building_machine_capital
        }
        # Synpase Drone - auth_hive_mind
        swap_type = {
            trigger = {
                exists = owner
                owner = {
                    is_hive_empire = yes
                    is_wilderness_empire = no
                }
            }
            name = synapse_drone
            desc = synapse_drone
            icon = synapse_drone
            building_icon = building_hive_capital
            condition_string = DRONE_JOB_TRIGGER
            weight = 2
        }
        # Chronicle Drone
        swap_type = {
            trigger = {
                exists = owner
                owner = {
                    is_memorialist_empire = yes
                }
            }
            name = chronicle_drone
            desc = chronicle_drone
            icon = chronicle_drone
            building_icon = building_galactic_memorial_1
            condition_string = DRONE_JOB_TRIGGER
            weight = 3
        }
        swap_type = {
            trigger = {
                exists = owner
                owner = {
                    is_wilderness_empire = yes
                }
            }
            name = choirsymbiont
            desc = choirsymbiont
            icon = choirsymbiont
            building_icon = building_commensal_clearing_3
            condition_string = DRONE_JOB_TRIGGER
            weight = 10
        }
        inline_script = MECR/jobs/imperial_administrative_drone_swap_type
    }

    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_drone_job

    possible = { can_think = yes }

    resources = {
        category = planet_bureaucrats
        produces = {
            unity = 4
        }
        produces = {
            trigger = {
                exists = owner
                owner = {
                    is_memorialist_empire = yes
                }
            }
            unity = 1
        }
        upkeep = {
            trigger = {
                exists = owner
                owner = {
                    is_hive_empire = yes
                    is_lithoid = no
                }
            }
            food = 2
            energy = 2
        }
        upkeep = {
            trigger = {
                exists = owner
                owner = {
                    is_hive_empire = yes
                    is_lithoid = yes
                }
            }
            minerals = 2
            energy = 2
        }
        upkeep = {
            trigger = {
                exists = owner
                owner = {
                    is_hive_empire = no
                }
            }
            energy = 4
        }
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                is_memorialist_empire = yes
            }
        }
        modifier = {
            planet_stability_add = 0.5
        }
    }

    triggered_planet_modifier = {
        potential = {
            planet = {
                has_active_building = building_league_offices
            }
        }
        planet_amenities_no_happiness_add = 100
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    triggered_planet_modifier = {
        potential = {
            OR = {
                has_modifier = planet_artifact_relays_machine
                has_modifier = planet_artifact_relays_hivemind
            }
        }
        modifier = {
            planet_stability_add = 2
            planet_jobs_simple_drone_produces_mult = 0.01
        }
    }

    triggered_planet_modifier = {
        potential = {
            planet = {
                exists = owner
                owner = {
                    has_tradition = tr_modularity_4
                }
            }
        }
        planet_jobs_simple_drone_produces_mult = 0.02
    }
    country_modifier = {
        country_admin_cap_add = 20
    }

    weight = {
        weight = @synapse_drone_job_weight
        mult = value:job_weights_modifier|JOB|coordinator|RESOURCE|unity|
        modifier = {
            factor = 0.9
            exists = owner
            years_passed < 1
            owner = { has_valid_civic = civic_machine_assimilator }
            has_trait = trait_cybernetic
        }
    }

    inline_script = "jobs/automodding_priority_unity"

    inline_script = MECR/jobs/imperial_administrative_drone_effects

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = complex_drone
                AMOUNT = local_pop_amount
            }
        }
    }
}

#后勤工蜂
logistics_drone = {
    category = complex_drone

    swappable_data = {
        default = {
            condition_string = DRONE_JOB_TRIGGER
            building_icon = building_mineral_purification_plant
            icon = low_tech_bureaucrat
        }
        swap_type = {
            trigger = {
                exists = owner
                owner = {
                    OR = {
                        has_civic = civic_hive_capital_creates_gods
                        has_civic = civic_machine_financial_investment
                    }
                }
            }
            name = trader
            desc = trader
            icon = overlord_trader
            building_icon = tendril_cradle_building_3
            weight = 5
        }
        swap_type = {
            trigger = {
                exists = owner
                owner = {
                    is_wilderness_empire = yes
                }
            }
            name = spindlesymbiont
            desc = spindlesymbiont
            icon = spindlesymbiont
            building_icon = tendril_cradle_building_3
            weight = 10
        }
    }

    tags = { trade }

    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_drone_job

    resources = {
        category = planet_traders
        produces = {
            trade = 5
        }
        produces = {
            trigger = {
                exists = owner
                owner = {
                    OR = {
                        has_civic = civic_hive_capital_creates_gods
                        has_civic = civic_machine_financial_investment
                    }
                }
            }
            consumer_goods = 3
        }
        upkeep = {
            trigger = {
                exists = owner
                owner = {
                    OR = {
                        has_civic = civic_hive_capital_creates_gods
                        has_civic = civic_machine_financial_investment
                    }
                }
            }
            minerals = 3
        }
    }

    country_modifier = {
        country_resource_max_trade_add = 100
    }

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_amenities_no_happiness_add = 250
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = { has_tradition = tr_synchronicity_integrated_preservation }
        }
        planet_amenities_no_happiness_add = 250
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                has_tradition = tr_virtuality_5
            }
        }
        planet_amenities_no_happiness_add = 250
    }

    weight = {
        weight = @simple_drone_job_weight
        mult = value:job_weights_modifier|JOB|logistics_drone|RESOURCE|trade|
    }

    inline_script = "jobs/automodding_priority_trade"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = simple_drone
                AMOUNT = local_pop_amount
            }
        }
    }
}