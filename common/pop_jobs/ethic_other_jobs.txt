###################
# Special Jobs
###################
servant = {
	category = worker
	is_capped_by_modifier = no
	building_icon = building_luxury_residence
	clothes_texture_index = 2

	possible_pre_triggers = {
		is_sapient = yes
	}
	possible = {
		can_take_servant_job = yes
	}

	resources = {
		category = planet_jobs
		upkeep = { # 失控女仆兼容
			trigger = {
				has_global_flag = flag_rogue_maid_mod_activated
				has_trait = trait_machine_maid
				exists = owner
				owner = { is_maid_pops_serviced_overlord = yes }
			}
			energy = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_pop_modifier = {
		potential = {
			is_organic_species = yes
		}
		pop_housing_usage_add = -0.5
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	# 失控女仆兼容：妹抖作为侍仆的额外效果
	triggered_planet_modifier = {
		potential = {
			has_global_flag = flag_rogue_maid_mod_activated
			has_trait = trait_machine_maid
		}
		modifier = {
			planet_amenities_add = 4
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}
	}
	triggered_planet_modifier = {
		potential = {
			has_global_flag = flag_rogue_maid_mod_activated
			has_trait = trait_machine_maid
			exists = owner
			owner = { is_maid_pops_serviced_overlord = yes }
		}
		modifier = {
			planet_amenities_add = 2
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}
	}
	triggered_planet_modifier = {
		potential = {
			has_global_flag = flag_rogue_maid_mod_activated
			has_trait = trait_machine_maid
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		modifier = {
			planet_amenities_add = -1
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}
	}

	weight = {
		weight = @special_job_weight
		#modifier = { # 可控的动态权重 但是没必要
		#	factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		#	owner = { has_edict = dynamic_weight }
		#}
	}
}

slave_overseer = {
	category = specialist
	is_capped_by_modifier = yes
	building_icon = building_crude_huts
	clothes_texture_index = 3
	icon = enforcer

	possible_pre_triggers = {
		is_enslaved = yes
		has_planet = yes
		is_sapient = yes
	}

	possible = {
		OR = {
			is_enslaved = yes
			battle_thrall_job_check_trigger = yes
		}
	}

	resources = {
		category = planet_enforcers
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_police_state
				}
			}
			unity = 1
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_ultimate_collective
				}
			}
			unity = 3
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_active_tradition = tr_domination_judgment_corps }
			}
			unity = 1
		}
		upkeep = {
			trigger = {
				planet = {
					has_modifier = anticrime_campaign
				}
			}
			energy = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_reeducated_labor
				}
			}
			unity = 1
		}
		#
	}
	pop_modifier = {
		pop_happiness = 0.25
	}
	planet_modifier = {
		planet_crime_add = -20
		planet_jobs_slave_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_domination_judgment_corps
			}
		}
		modifier = {
			planet_crime_add = -5
		}
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				has_modifier = anticrime_campaign
			}
		}
		modifier = {
			planet_crime_add = -10
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	
	weight = {
		weight = @specialist_job_weight
	}
}
#原版
slave_toiler = {
	category = worker
	is_capped_by_modifier = no
	building_icon = building_crude_huts
	clothes_texture_index = 3
	icon = primitive_laborer

	possible_pre_triggers = {
		is_enslaved = yes
		has_planet = yes
		is_sapient = yes
	}

	possible = {
		planet = { has_modifier = slave_colony }
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @special_job_weight
	}
}

#scavenger_drone = {
#	category = simple_drone
#	is_capped_by_modifier = no
#	building_icon = building_residence
#	clothes_texture_index = 2
#	icon = mining_drone
#
#	possible_pre_triggers = {
#		has_owner = yes
#		is_being_purged = no
#		is_enslaved = no
#		is_being_assimilated = no
#	}
#
#	possible = {
#		owner = { is_hive_empire = yes }
#		drone_job_check_trigger = yes
#		days_passed >= 1 # So drones are not assigned this job before other jobs are created by the game start
#	}
#
#	resources = {
#		category = planet_jobs
#		produces = {
#			minerals = 1
#		}
#
#		upkeep = {
#			trigger = {
#				planet = {
#					has_modifier = activity_program
#				}
#			}
#			food = 1
#		}
#	}
#
#	weight = {
#		weight = @special_job_weight
#	}
#}
#
#原版
organic_battery = {
	category = worker
	is_capped_by_modifier = no
	clothes_texture_index = 2

	pop_modifier = {
		pop_housing_usage_add = -0.5
	}

	possible_pre_triggers = {
		is_enslaved = yes
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_slavery }
		has_slavery_type = { type = slavery_matrix }
	}

	resources = {
		category = planet_jobs
		produces = {
			energy = 4
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_grid }
			}
			energy = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_nexus }
			}
			energy = 2
		}
	}

	weight = {
		weight = @special_job_weight
	}
}
#原版
livestock = {
	category = worker
	is_capped_by_modifier = no
	clothes_texture_index = 2

	pop_modifier = {
		pop_housing_usage_add = -0.5
		pop_political_power = -0.1
	}

	possible_pre_triggers = {
		is_enslaved = yes
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_slavery }
		has_slavery_type = { type = slavery_livestock }
	}

	resources = {
		category = planet_livestock
		produces = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
			}
			food = 4
		}
		produces = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
				planet = { has_active_building = building_food_processing_facility }
			}
			food = 1
		}
		produces = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
				planet = { has_active_building = building_food_processing_center }
			}
			food = 2
		}
		produces = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 2
		}
		produces = {
			trigger = {
				is_lithoid = yes
				planet = { has_active_building = building_mineral_purification_plant }
			}
			minerals = 1
		}
		produces = {
			trigger = {
				is_lithoid = yes
				planet = { has_active_building = building_mineral_purification_hub }
			}
			minerals = 2
		}
	}

	weight = {
		weight = @special_job_weight
	}
}

bio_trophy = {
	category = bio_trophy
	clothes_texture_index = 1
	building_icon = building_organic_sanctuary

	possible_pre_triggers = {
		is_sapient = yes
	}
	possible = {
		has_citizenship_type = { type = citizenship_organic_trophy }
	}

	resources = {
		category = planet_bio_trophies
		produces = {
			trigger = {
				happiness >= 0.5
			}
			unity = 4
		}
		produces = {
			trigger = {
				owner = {
					has_valid_civic = civic_mechanical_utopia
				}
			}
			energy = 1
			minerals = 1
			food = 1
			consumer_goods = 0.5
			alloys = 0.25
		}
		# 失控女仆兼容
		produces = {
			trigger = {
				has_global_flag = flag_rogue_maid_mod_activated
				happiness >= 0.5
			}
			unity = -1
		}
		produces = {
			trigger = {
				has_global_flag = flag_rogue_maid_mod_activated
				happiness >= 0.5
				owner = {
					has_active_tradition = tr_harmony_pursuit_of_meaning
				}
			}
			physics_research = 0.4
			society_research = 0.4
			engineering_research = 0.4
		}
		upkeep = {
			trigger = {
				has_global_flag = flag_rogue_maid_mod_activated
				happiness >= 0.5
				owner = {
					has_active_tradition = tr_harmony_pursuit_of_meaning
				}
			}
			consumer_goods = 0.2
		}
	}
	triggered_planet_modifier = {
		potential = {
			happiness >= 0.5
		}
		modifier = {
			planet_amenities_no_happiness_add = 2
			planet_jobs_complex_drone_produces_mult = 0.05
		}
	}
	triggered_pop_modifier = {
		pop_housing_usage_add = -1
	}
	triggered_country_modifier = {
		potential = {
			happiness >= 0.5
		}
		modifier = {
			empire_size_penalty_mult = -0.01
		}
	}

	# 失控女仆兼容
	triggered_planet_modifier = {
		potential = {
			has_global_flag = flag_rogue_maid_mod_activated
			happiness >= 0.5
		}
		modifier = {
			planet_amenities_no_happiness_add = -2
			planet_jobs_complex_drone_produces_mult = -0.01
		}
	}
	triggered_planet_modifier = {
		potential = {
			has_global_flag = flag_rogue_maid_mod_activated
			OR = {
				owner = {
					is_ai = yes
					has_modifier = pop_modifier_master_in_love
				}
				has_modifier = pop_modifier_master_in_love
			}
		}
		modifier = {
			planet_amenities_no_happiness_add = 2
			planet_crime_no_happiness_add = -1.5
		}
	}
	triggered_country_modifier = {
		potential = {
			has_global_flag = flag_rogue_maid_mod_activated
			happiness >= 0.5
		}
		modifier = {
			country_edict_fund_add = 1
		}
	}

	weight = {
		weight = 500000
	}
}
#原版
purge = {
	category = purge
	is_capped_by_modifier = no
	clothes_texture_index = 2

	ignores_sapience = yes

	possible = {
		OR = {
			has_citizenship_type = { type = citizenship_purge_machine }
			has_citizenship_type = { type = citizenship_purge }
			has_pop_flag = event_purge
		}
	}

	resources = {
		category = planet_jobs
		produces = {
			trigger = {
				exists = owner
				owner = { 
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_hive_devouring_swarm
						has_valid_civic = civic_machine_terminator
					} 
				}
			}
			unity = 2
			engineering_research = 2
			society_research = 2
			physics_research = 2
		}
		produces = { # regular processing
			trigger = {
				has_purge_type = { type = purge_processing }
				is_robotic_species = no
				is_lithoid = no
			}
			food = 6
		}
		produces = { # regular processing
			trigger = {
				has_purge_type = { type = purge_processing }
				is_lithoid = yes
			}
			minerals = 4
		}
		produces = { # processing robots (devouring swarm)
			trigger = {
				has_purge_type = { type = purge_processing }
				is_robotic_species = yes
			}
			alloys = 3
		}
		produces = {
			trigger = {
				has_purge_type = { type = purge_matrix }
			}
			energy = 6
		}
		produces = {
			trigger = {
				has_purge_type = { type = purge_labor_camps }
			}
			food = 3
			minerals = 3
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_facility }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_robotic_species = no
						is_lithoid = no
					}
				}
			}
			food = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_center }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_robotic_species = no
						is_lithoid = no
					}
				}
			}
			food = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_mineral_purification_plant }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_lithoid = yes
					}
				}
			}
			minerals = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_mineral_purification_hub }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_lithoid = yes
					}
				}
			}
			minerals = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
				has_purge_type = { type = purge_processing }
				is_robotic_species = yes
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
				has_purge_type = { type = purge_processing }
				is_robotic_species = yes
			}
			alloys = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_grid }
				has_purge_type = { type = purge_matrix }
			}
			energy = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_nexus }
				has_purge_type = { type = purge_matrix }
			}
			energy = 2
		}
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			exists = planet
			exists = planet.controller
			OR = {
				has_pop_flag = event_purge
				planet.controller = {
					OR = {
						is_country_type = swarm
						is_country_type = ai_empire
					}
				}
			}
		}

		modifier = {
			factor = 9999 # u die when flagged
			has_pop_flag = event_purge
		}

		modifier = {
			factor = 9999 # u die when crisis'd
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
					# extradimensionals just bombard you
				}
			}
		}
	}
}
#原版
crisis_purge = {
	icon = purge
	category = purge
	purge = purge_normal
	is_capped_by_modifier = no
	clothes_texture_index = 2
	ignores_sapience = yes

	possible_pre_triggers = {
		is_sapient = yes
	}

	possible = { # controlled by crisis
		exists = planet
		exists = planet.controller
		planet.controller = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
			}
		}
		OR = { # contingency won't purge itself
			NOT = { exists = event_target:custodian_bot }
			AND = {
				exists = event_target:custodian_bot
				NOT = { species = { is_same_value = event_target:custodian_bot } }
			}
		}
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}

		modifier = {
			factor = 9999 # u die when crisis'd
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
					# extradimensionals just bombard you
				}
			}
		}
	}
}

assimilation = {
	category = assimilation
	is_capped_by_modifier = no
	clothes_texture_index = 2

	possible_pre_triggers = {
		is_sapient = yes
	}
	possible = {
		has_citizenship_type = {
			type = citizenship_assimilation
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				is_robotic_species = yes
			}
			energy = @living_standard_energy_normal
		}
		# 失控女仆兼容：机飞帝国不会同化有基因库的星球上的物种，作为补偿产出一点科研
		produces = {
			trigger = {
				has_global_flag = flag_rogue_maid_mod_activated
				planet = { has_building = building_gene_bank }
				owner = { has_country_flag = synthetic_empire }
			}
			physics_research = 1
			society_research = 1
			engineering_research = 1
		}
	}
	
	weight = {
		weight = @special_job_weight

		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			is_being_assimilated = yes
		}
	}
}

criminal = {
	category = criminal
	is_capped_by_modifier = yes
	can_set_priority = no
	clothes_texture_index = 2
	building_icon = building_residence
	contributes_to_diplo_weight = no
	ignores_favorite = yes #this means that if you favorite e.g. clerks, the +1000 bonus will not matter for jobs working as criminals
	
	possible_pre_triggers = {
		has_owner = yes
	}
	possible = {
		# check that this is not a robot in servitude
		NOT = {
			has_citizenship_type = {
				country = owner
				type = citizenship_robot_servitude
			}
		}
		owner = {
			is_gestalt = no
		}
	}

	planet_modifier = {
		planet_amenities_add = 1
	}
	triggered_planet_modifier = {
		potential = {
			owner = {
			    NOR = {
				    has_valid_civic = civic_criminal_heritage
				    has_valid_civic = civic_underworld_society
				}
			}
		}
		modifier = {
			trade_value_add = -1
		}
	}
	triggered_planet_modifier = {
		potential = {
			owner = {
				has_valid_civic = civic_underworld_society
			}
		}
		modifier = {
			trade_value_add = 1.5
			planet_jobs_worker_produces_mult = 0.01
		}
	}
	triggered_planet_modifier = {
		potential = {
			owner = {
				has_valid_civic = civic_criminal_heritage
			}
		}
		planet_jobs_worker_produces_mult = 0.4
		planet_stability_add = 40
		mult = planet.society_factor_pops
	}

	weight = {
		weight = @criminal_job_weight
	}
}

deviant_drone = {
	category = deviant_drone
	is_capped_by_modifier = yes
	can_set_priority = no
	clothes_texture_index = 2
	icon = criminal
	contributes_to_diplo_weight = no
	ignores_favorite = yes

	possible_pre_triggers = {
		has_planet = yes
	}
	possible = {
		planet = {
			has_modifier = drone_deviancy
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			energy = 1
		}
	}
	planet_modifier = {
		planet_crime_no_happiness_add = 1
	}

	weight = {
		weight = @criminal_job_weight
	}
}

corrupt_drone = {
	category = corrupt_drone
	is_capped_by_modifier = yes
	can_set_priority = no
	clothes_texture_index = 2
	icon = criminal
	contributes_to_diplo_weight = no
	ignores_favorite = yes

	possible_pre_triggers = {
		has_planet = yes
	}
	possible = {
		planet = {
			has_modifier = drone_corruption
		}
	}

	resources = {
		category = planet_jobs
		upkeep = {
			energy = 1
		}
	}
	planet_modifier = {
		planet_crime_no_happiness_add = 1
	}

	weight = {
		weight = @criminal_job_weight
	}
}
