#在国家被摧毁
#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		eci_civic_firing_torch.1
	}
}

#分配一个领袖时
# Scope: Leader (after assignment)
on_leader_assigned = {
	events = {
		ethic_altruism.0
	}
}

#当领袖逝世
# This = Country
# From = Leader
on_leader_death_notify = {
	events = {
		ethic_imperial_cult.0
		ethic_common_sense_changes.1
	}
}

#当统治者变更
# This = Country
on_ruler_set = {
	events = {
		new_election.1
		ethic_kennedy.2
		ethic_military_dictatorship.2
	}
}

#当领袖成为统治者
# This = Country
# FROM = Leader
on_ruler_created = {
	events = {
		ethic_philosopher_king.2
	}
}

#选举结束后
# scope: country
on_election_ended = {
	events = {
	}
}

#每月检测，范围国家
on_monthly_pulse_country = {
	events = {
		peoples_emperor.2
		peoples_emperor.3
		ethic_society.0
		ethic_society.2
		ethic_royal_family.3
		ethic_yunnanese.1
		ethic_communist_society.1
		ethic_admin_cap.0
		#ethic_easter.301
		#ethic_easter.302
		#ethic_easter.303
		#ethic_easter.304
	}
}

#每五年检测，范围国家
on_five_year_pulse_country = {
	events = {
		sic_mod.170
		sic_mod.177
		red_origin.5715
		ethic_military_dictatorship.1
		ethic_spiritual_democracy.1
		ethic_revolutionary_terrorism.0
	}
	random_events = {
		10 = 0
		1 = eci_event.10
		1 = eci_event.20
		1 = eci_event.30
		1 = eci_event.40
		1 = eci_event.50
		1 = eci_event.60
		1 = eci_event.70
		1 = eci_event.80
		1 = eci_event.90
		1 = eci_event.100
		1 = eci_event.110
		10 = eci_event.120
	}
}

#每五年检测，范围星球
on_colony_5_year_pulse = {
	events = {
	}
}

#技术进步后
on_tech_increased = {
	events = {
		sic_mod.172
		sic_mod.173
		sic_mod.175
		sic_mod.176
		ethic_ultravisionary_socialism.0
		ethic_civic_zhaowen_dao.2
		eci_origin_galaxy_iron_curtain.2
	}
}

# 领袖已添加到领袖池中，可供招聘
# scope: country, from: leader
on_added_to_leader_pool = {
	events = {
		ethic_civic_leaders_initial_level.1
		ethic_civic_leaders_initial_level.2
		ethic_civic_leaders_initial_level.3
		ethic_civic_leaders_initial_level.4
		ethic_civic_leaders_initial_level.5
		ethic_civic_leaders_initial_level.6
		ethic_civic_leaders_initial_level.7
		ethic_civic_leaders_initial_level.8
		ethic_civic_leaders_initial_level.9
	}
}

# 创建新领袖时
# scope: country, from: leader
on_leader_spawned = {
	events = {
		#ethic_direct_democratic_councilor.6
		ethic_royal_family.5
	}
}

#星球上每增加一个人口
on_pop_added = {
	events = {
	}
}

#当一个人口完成增长
on_pop_grown = {
	events = {
	}
}

#每年一次的触发器，范围国家
on_yearly_pulse_country = {
	events = {
		ethic_fanatic_pacifist_stop_war.1
		peoples_emperor.1
		ethic_conciliatory.2
		#ethic_corpus_event.1
		ethic_civic_zhaowen_dao.0
		ethic_forever_with_us.0
		ethic_equal_gift.1
		ethic_post_revolutionary.1
		eci_origin_galaxy_iron_curtain.1
		#ethic_militaristic_fervor.12
		ethic_magic_mirror.1
		ethic_wind_of_magic.1
		ethic_random_deposit.1
	}
}
on_yearly_pulse = {
	events = {
		ethic_warrior_of_love.0
	}
}

#每年一次的触发器，范围星球
on_colony_yearly_pulse = {
	events = {
		ethic_thirteen_monkeys.1
	}
}

#每两年一次的触发器，范围国家
on_bi_yearly_pulse_country = {
	events = {
		#ethic_easter.0
		ethic_auto_base.1
		honorary_curator.0
		ethic_ai_science_patch.1
	}
}

#每十年一次的触发器，范围国家
on_decade_pulse_country = {
	events = {
		ethic_paragon.41234
		ethic_magic_mirror.2
	}
}

#每月一次的触发器
on_monthly_pulse = {
	events = {
		starter_tech.4
	}
}

# 殖民船落地那一刻
on_colonization_started = {
	events = {
	}
}

#殖民后
on_colonized = {
	events = {
		ethic_society.1
		ethic_society.4
		auto_branch_offices.1
		ethic_trade_invest_event.2
	}
}

# 采纳传统的触发器
on_tradition_picked = {

}

# 采纳飞升的触发器
on_ascension_perk_picked = {
	events = {

	}
}

# 开局的触发器
on_game_start = {
	events = {
		starter_tech.1
		starter_tech.2
		starter_tech.3
		starter_tech.5
		cultural_overhaul_flag.1
		cultural_overhaul_flag.2
		ethic_conciliatory.1
		ethic_notice.0
		red_origin.1
		red_origin.10000
		ethic_start_set.0
		honorary_curator.0
		auto_branch_offices.0
		eci_civic_forum_friends.1
		ethic_civic_answer.0
	}
}

#游戏开始时
on_game_start_country = {
	events = {
		ethic_advanced_start.1
		ethic_civic_procrastination.0
		ethic_society.0
		ethic_ynwd_event.1
		ethic_ynwd_event.2
		ethic_galaxy_ethnicity.0
		ethic_the_source_of_life.0
		taking_care_of_god.0
		eci_origin_galaxy_iron_curtain.0
		ethic_metal_cornerstone.0
		ethic_civic_leaders_initial_level.0
		eci_civic_peaceful_republic.0
		ethic_wander_planet.0
		ethic_trade_invest_event.3
		eci_transcendence.0
		ethic_philosopher_king.1
		ethic_military_dictatorship.3
		ethic_start_set.20
		ethic_revolutionary_terrorism.0
		ethic_wind_of_magic.0
		zarqlanism_idea_evt.0
		ethic_im_your_father.0
		ethic_galaxy_light.0
		ethic_common_sense_changes.0
	}
}

# 在帝国初始化期间启动新游戏时调用
# scope: country
empire_init_create_ships = {
	events = {
		ethic_start_set.11
		ethic_start_set.12
	}
}

# 如果has_secondary_species游戏规则为true，则在帝国初始化期间启动新游戏时调用。
## 在empire_init_create_capital_pops之前调用。
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists)
empire_init_capital_planet = {
	events = {
		ethic_advanced_start.0
		ethic_true_yuht_start.0
	}
}

#加载存档
on_single_player_save_game_load = {
	events = {
		future_society.30
		ethic_thirteen_monkeys.0
		ethic_notice.3
	}
}

#领袖逝世
on_leader_death = {
	events = {
		red_origin.6001
		ethic_royal_family.1
		ethic_home_country_isomorphism.1
	}
}

# 领袖升级
# Scope = Country
# From = Leader
on_leader_level_up = {
	events = {
		eci_legendary_leader.0
		ethic_home_country_isomorphism.0
	}
}

# 尝试为具有自定义外交的国家打开外交视图时触发。
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		#ethic_easter.100
	}
}

#第一次接触后
# This = Empire 1
# From = Empire 2
# Fromfromfrom = System where contact occurred
on_first_contact={
	events =  {
		ethic_militarist.1
	}
}

# 第一次接触过程结束时触发
# This = first contact scope
# From = other country
on_first_contact_finished  ={
	events =  {

	}
}


on_blocker_cleared = {
	events = {
		# ethic_rebuild_clear_blocker.1
	}
}

#赢！
on_war_won = {
	events = {
		red_origin.8194
	}
}

#赢麻了！
on_war_lost = {
	events = {
		red_origin.8195
	}
}

#在应用新政府后，在国家更换政府时执行
on_post_government_changed = {
	events = {
		ethic_direct_democratic_councilor.4
		ethic_rebuild_ascension_perks.10000
		eci_civic_peaceful_republic.0
		eci_civic_peaceful_republic.7
		ethic_society.7
		ethic_yunnanese.1
	}
}

#首次发现外星人
# THIS = first_contact
on_first_contact_started = {
	events = {
		ethic_first_contact.0
	}
}

# 战争开始
# Root = Country
# From = War
on_war_beginning = {
	events = {
		eci_civic_peaceful_republic.6
	}
}

# 打胜仗
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		eci_civic_citizen_service.1
	}
}

# 吃败仗
# Root = Loser Warleader
# From = Winner Warleader
# FromFrom = War
on_war_lost = {
	events = {
		eci_civic_citizen_service.2
		#ethic_militaristic_fervor.10
	}
}

# 摧毁敌军舰队
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		glorious_fleet.0
	}
}

# 舰队被摧毁
# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
		glorious_fleet.1
	}
}

# Scope = planet_event
# This = planet scope
# From = uplifted species (pre-modification)
on_uplift_completion = {
	events = {
	}
}

#on_building_demolished = {
#	events = {
#		# get 30 minerals back
#		ethic_rebuild_minerals_back.1
#	}
#}
#on_purge_complete = {
#	events = {
#		purity_chosen.1
#	}
#}
#on_the_start_button_press = {
#	events = {
#		starter_event.1
#
#	}
#}
#on_daily_bombardment = {
#	events = {
#		pds_active.1
#	}
#}

#灭绝人口
on_pop_purged = {
	events = {
	}
}

# 每造好一个观测站
# This = construction ship
# From = planet it is built on
on_building_observation_station = {
	events = {
		ethic_rural_teachers.1
	}
}

#摧毁别人的陆军
# This = owner
# From = army
# FromFrom = opponent
# FromFromFrom = planet
on_army_killed_in_combat = {
	events = {
		#ethic_militaristic_fervor.13
		#ethic_militaristic_fervor.14
	}
}

#摧毁别人的飞船
# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		#ethic_militaristic_fervor.1
	}
}

#飞船被摧毁
# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		#ethic_militaristic_fervor.2
		ethic_wander_planet.4
	}
}

#Fired whenever a new owner is set for a planet, and the planet was aggressively conquered
#Fired in ADDITION to on_planet_transfer
#FromFrom = Former Owner
#From = Country scope (new owner)
#This = Planet scope
on_planet_conquer = {
	events = {
		#ethic_militaristic_fervor.3
		#ethic_militaristic_fervor.4
	}
}
#进入新的星系
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		ethic_wander_planet.3
	}
}

#进入战争
# This = country
# From = opponent war leader
on_entering_war = {
	events = {
		eci_civic_peace_defense_forces.1
		eci_civic_peace_defense_forces.2
		ethic_society.5
	}
}

#战争结束
# Root = Loser
# From = Main Winner
on_war_ended = {
	events = {
		eci_civic_peace_defense_forces.3
		ethic_society.6
	}
}

#地面战斗开始时
# This = planet
# From = country attacking
on_ground_combat_started = {
	events = {
		eci_civic_peace_defense_forces.4
	}
}

#地面防御取得胜利
# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		eci_civic_peace_defense_forces.5
	}
}

#星球易主
# This = Planet scope
# From = Country scope (new owner)
# FromFrom = Country scope (previous owner, if any)
on_planet_transfer = {
	events = {
		ethic_trade_invest_event.4
		ethic_revolutionary_terrorism.2
	}
}

#每当一个星系被调查完毕时
# Root = Country
# From = system
# FromFrom = Fleet of the science ship that surveyed it, if any
on_system_survey = {
	events = {
		ethic_learning_society.0 # first l-gate is in foreign territory - apoc.3 duplicate
	}
}

#每当舰船进入一个星系
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		ethic_tax_inclusive_company.0
	}
}

#当舰队进入星球/星基/巨构轨道
#From = Planet/Starbase/Megastructure scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		ethic_martial_brotherhood.0
		ethic_netori_culture.0
	}
}