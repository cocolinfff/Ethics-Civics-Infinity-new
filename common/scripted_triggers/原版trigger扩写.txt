#是极端思潮
is_fanatic = {
	OR = {
		has_ethic = ethic_fanatic_authoritarian
		has_ethic = ethic_fanatic_egalitarian
		has_ethic = ethic_fanatic_materialist
		has_ethic = ethic_fanatic_militarist
		has_ethic = ethic_fanatic_pacifist
		has_ethic = ethic_fanatic_spiritualist
		has_ethic = ethic_fanatic_xenophile
		has_ethic = ethic_fanatic_xenophobe
		has_ethic = ethic_fanatic_socialism
		has_ethic = ethic_fanatic_capitalism
	}
}
is_fanatical = {
	OR = {
		has_ethic = ethic_fanatic_xenophobe
		has_ethic = ethic_fanatic_xenophile
		has_ethic = ethic_fanatic_materialist
		has_ethic = ethic_fanatic_spiritualist
		has_ethic = ethic_fanatic_authoritarian
		has_ethic = ethic_fanatic_egalitarian
		has_ethic = ethic_fanatic_militarist
		has_ethic = ethic_fanatic_pacifist
		has_ethic = ethic_fanatic_socialism
		has_ethic = ethic_fanatic_capitalism
	}
}

#专家岗位判定
can_fill_specialist_job = {
	else = {
		custom_tooltip = SPECIALIST_JOB_TRIGGER
		hidden_trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
			exists = owner
			OR = {
				is_enslaved = no
				has_slavery_type = { type = slavery_indentured }
				owner = { has_valid_civic = civic_du_contrat_social }
				owner = { has_valid_civic = civic_sparta_spirit }
			}
			is_being_purged = no
			is_being_assimilated = no
			NOT = { has_trait = trait_syncretic_proles }
			NOT = { has_trait = trait_nerve_stapled }
			NOT = { has_trait = trait_zombie }
			NOT = { has_trait = trait_fallen_god }
			OR = {
				NOT = { has_trait = trait_mechanical }
				AND = {
					NOT = { has_trait = trait_thl_doll }
					owner = {
						has_technology = tech_droid_workers
					}
				}
				AND = {
					has_trait = trait_thl_doll
					owner = {
						has_technology = tech_automatic_dolls
					}
				}
			}
			NOT = { has_citizenship_type = { type = citizenship_organic_trophy } }
			if = {
				limit = {
					divinity_right_to_work_job_check_trigger_exempt = no
				}
				divinity_right_to_work_job_check_trigger_specialist = yes
			}
			ethic_sparta_job_check_trigger = no
		}
	}
}

can_build_gaiaseeder_machine = {
	# Can always build on ideal worlds
	if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				prev = {
					is_ideal_planet_class = {
						who = prev
						status = yes
					}
				}
			}
		}
		always = yes
	}
	# Requires Climate Restoration for Tomb Worlds
	else_if = {
		limit = {
			planet = { is_planet_class = pc_nuked }
		}
		custom_tooltip = {
			fail_text = gaiaseeders_tomb_world
			owner = { has_technology = tech_climate_restoration }
		}
	}
	# Requires Terrestrial Sculpting for same climate as homeworld
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_wet = yes
			}
			planet = {
				is_wet = yes
				any_galaxy_species = {
					has_species_flag = original_organic_species_of_@prev.owner
					prev = {
						is_ideal_planet_class = {
							who = prev
							status = no
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_same_climate_wet
			owner = { has_technology = tech_terrestrial_sculpting }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_dry = yes
			}
			planet = {
				is_dry = yes
				any_galaxy_species = {
					has_species_flag = original_organic_species_of_@prev.owner
					prev = {
						is_ideal_planet_class = {
							who = prev
							status = no
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_same_climate_dry
			owner = { has_technology = tech_terrestrial_sculpting }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_cold = yes
			}
			planet = {
				is_cold = yes
				any_galaxy_species = {
					has_species_flag = original_organic_species_of_@prev.owner
					prev = {
						is_ideal_planet_class = {
							who = prev
							status = no
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_same_climate_cold
			owner = { has_technology = tech_terrestrial_sculpting }
		}
	}
	# Requires Ecological Adaptation for other climates
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_wet = yes
			}
			planet = {
				OR = {
					is_dry = yes
					is_cold = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_different_climate_wet
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_dry = yes
			}
			planet = {
				OR = {
					is_wet = yes
					is_cold = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_different_climate_dry
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_cold = yes
			}
			planet = {
				OR = {
					is_wet = yes
					is_dry = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_different_climate_cold
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner
				ideal_planet_is_special = yes
			}
			planet = {
				OR = {
					is_wet = yes
					is_dry = yes
					is_cold = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_special_habitability_preference
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
}

can_build_overlord_gaiaseeder_machine = {
	# Can always build on ideal worlds
	if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				prev.planet = {
					is_ideal_planet_class = {
						who = prev
						status = yes
					}
				}
			}
		}
		always = yes
	}
	# Requires Climate Restoration for Tomb Worlds
	else_if = {
		limit = {
			planet = { is_planet_class = pc_nuked }
		}
		custom_tooltip = {
			fail_text = gaiaseeders_tomb_world
			owner = { has_technology = tech_climate_restoration }
		}
	}
	# Requires Terrestrial Sculpting for same climate as homeworld
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_wet = yes
			}
			planet = {
				is_wet = yes
				any_galaxy_species = {
					has_species_flag = original_organic_species_of_@prev.owner.overlord
					prev = {
						is_ideal_planet_class = {
							who = prev
							status = no
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_same_climate_wet
			owner = { has_technology = tech_terrestrial_sculpting }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_dry = yes
			}
			planet = {
				is_dry = yes
				any_galaxy_species = {
					has_species_flag = original_organic_species_of_@prev.owner.overlord
					prev = {
						is_ideal_planet_class = {
							who = prev
							status = no
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_same_climate_dry
			owner = { has_technology = tech_terrestrial_sculpting }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_cold = yes
			}
			planet = {
				is_cold = yes
				any_galaxy_species = {
					has_species_flag = original_organic_species_of_@prev.owner.overlord
					prev = {
						is_ideal_planet_class = {
							who = prev
							status = no
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_same_climate_cold
			owner = { has_technology = tech_terrestrial_sculpting }
		}
	}
	# Requires Ecological Adaptation for other climates
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_wet = yes
			}
			planet = {
				OR = {
					is_dry = yes
					is_cold = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_different_climate_wet
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_dry = yes
			}
			planet = {
				OR = {
					is_wet = yes
					is_cold = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_different_climate_dry
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_cold = yes
			}
			planet = {
				OR = {
					is_wet = yes
					is_dry = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_different_climate_cold
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
	else_if = {
		limit = {
			any_galaxy_species = {
				has_species_flag = original_organic_species_of_@prev.owner.overlord
				ideal_planet_is_special = yes
			}
			planet = {
				OR = {
					is_wet = yes
					is_dry = yes
					is_cold = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = gaiaseeders_special_habitability_preference
			owner = { has_technology = tech_ecological_adaptation }
		}
	}
}

is_primitive_society = {
	has_civic = civic_primitive_worship
}

is_coalition_government = {
	if = {
		limit = {
			OR = {
				has_civic = civic_coalition_government
				has_civic = civic_coalition_government_overlord
			}
		}
		custom_tooltip = civic_tooltip_has_coalition_government
	}
	else = {
		custom_tooltip = {
			fail_text = "civic_tooltip_has_coalition_government"
			always = no
		}
	}
}
is_valid_coalition_government = {
	if = {
		limit = {
			OR = {
				has_valid_civic = civic_coalition_government
				has_valid_civic = civic_coalition_government_overlord
			}
		}
		custom_tooltip = civic_tooltip_has_coalition_government
	}
	else = {
		custom_tooltip = {
			fail_text = "civic_tooltip_has_coalition_government"
			always = no
		}
	}
}

is_memory_vault_empire = {
	OR = {
		has_civic = civic_forever_with_us
		has_civic = civic_memory_vault
		has_civic = civic_memory_vault_corporate
		has_civic = civic_memory_vault_machine
		has_civic = civic_memory_vault_hive
	}
}

#低技术开局
is_low_tech_start = {
	OR = {
		is_primitive = yes
		is_primitive_society = yes
		has_origin = origin_broken_shackles
		has_origin = origin_payback
		has_origin = origin_taking_care_of_god
		has_origin = origin_galaxy_iron_curtain
		has_civic = civic_eager_explorers
		has_civic = civic_privatized_exploration
		has_civic = civic_hive_stargazers
		has_civic = civic_machine_exploration_protocol
		has_civic = civic_hifuu
	}
}

is_eager_explorer_empire = {
	OR = {
		has_civic = civic_eager_explorers
		has_civic = civic_privatized_exploration
		has_civic = civic_hive_stargazers
		has_civic = civic_machine_exploration_protocol
		has_civic = civic_hifuu
		has_origin = origin_advanced_start
	}
}

is_relentless_industrialist_empire = {
	OR = {
		has_valid_civic = civic_relentless_industrialists
		has_valid_civic = civic_corporate_relentless_industrialists
	}
}

is_subterranean_empire = {
	OR = {
		has_origin = origin_subterranean
		has_origin = origin_mining_machinery
	}
}

is_catalytic_empire = {
	OR = {
		has_valid_civic = civic_catalytic_processing
		has_valid_civic = civic_corporate_catalytic_processing
		has_valid_civic = civic_hive_catalytic_processing
		has_valid_civic = civic_machine_catalytic_processing
	}
}

is_pleasure_seeker = {
	OR = {
		has_valid_civic = civic_lord_of_feast
		has_valid_civic = civic_pleasure_seekers
		has_valid_civic = civic_corporate_hedonism
	}
}

is_anglers_empire = {
	OR = {
		has_valid_civic = civic_anglers
		has_valid_civic = civic_corporate_anglers
		has_valid_civic = civic_anglers_socialism
	}
}

is_nuked_planet = {
	is_planet_class = pc_nuked
}

is_toxic_planet = {
	is_planet_class = pc_toxic
}

is_barren_planet = {
	is_planet_class = pc_barren
}

is_crossbreeding_possible = {
	is_sapient = yes
	NOR = {
		has_trait = trait_machine_unit
		has_trait = trait_mechanical
		has_trait = trait_hive_mind
		has_trait = trait_self_modified
		has_trait = trait_clone_soldier_infertile
		has_trait = trait_clone_soldier_infertile_full_potential
		has_trait = trait_fallen_god
		is_half_species = any
	}
}

has_encountered_other_species = {
	OR = {
		has_origin = origin_syncretic_evolution
		is_servitor_empire = yes
		has_origin = origin_symbiotic_race
		has_origin = origin_slave_race
		num_communications > 0
		any_owned_pop = {
			NOT = {
				has_trait = "trait_mechanical"
			}
			NOT = {
				is_same_species = prev
			}
		}
	}
}

ruler_job_check_trigger = {
	custom_tooltip = RULER_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		NOT = {
			has_trait = trait_syncretic_proles
		}
		NOT = {
			has_trait = trait_slave_gene
		}
		NOR = { 
			has_trait = trait_nerve_stapled
			has_trait = trait_zombie
			has_trait = trait_flesh_components
		}
		OR = {
			NOT = {
				has_trait = trait_mechanical
			}
			AND = {
				owner = {
					has_technology = tech_synthetic_workers
				}
				owner = {
					has_policy_flag = ai_full_rights
				}
			}
		}
		NOT = {
			has_citizenship_type = {
				type = citizenship_organic_trophy
			}
		}
	}
}

specialist_job_check_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		OR = {
			is_enslaved = no
			has_slavery_type = {
				type = slavery_indentured
			}
		}
		is_being_purged = no
		is_being_assimilated = no
		NOT = {
			has_trait = trait_syncretic_proles
		}
		NOT = {
			has_trait = trait_slave_gene
		}
		NOR = { 
			has_trait = trait_nerve_stapled
			has_trait = trait_zombie
			has_trait = trait_flesh_components
		}
		OR = {
			NOT = {
				has_trait = trait_mechanical
			}
			owner = {
				has_technology = tech_droid_workers
			}
		}
		NOT = {
			has_citizenship_type = {
				type = citizenship_organic_trophy
			}
		}
	}
}

entertainer_job_check_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		OR = {
			is_enslaved = no
			has_slavery_type = {
				type = slavery_domestic
			}
		}
		is_being_purged = no
		is_being_assimilated = no
		NOT = {
			has_trait = trait_syncretic_proles
		}
		NOT = {
			has_trait = trait_slave_gene
		}
		NOR = { 
			has_trait = trait_nerve_stapled
			has_trait = trait_zombie
			has_trait = trait_flesh_components
		}
		OR = {
			NOT = {
				has_trait = trait_mechanical
			}
			owner = {
				has_technology = tech_droid_workers
			}
		}
		NOT = {
			has_citizenship_type = {
				type = citizenship_organic_trophy
			}
		}
	}
}

is_pacifist = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_pacifist
				has_ethic = ethic_pacifist
			}
		}
		custom_tooltip = st_is_pacifist_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_pacifist_any"
			always = no
		}
	}
}
is_militarist = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_militarist
				has_ethic = ethic_militarist
			}
		}
		custom_tooltip = st_is_militarist_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_militarist_any"
			always = no
		}
	}
}

is_materialist = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_materialist
				has_ethic = ethic_materialist
			}
		}
		custom_tooltip = st_is_materialist_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_materialist_any"
			always = no
		}
	}
}
is_spiritualist = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_spiritualist
				has_ethic = ethic_spiritualist
			}
		}
		custom_tooltip = st_is_spiritualist_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_spiritualist_any"
			always = no
		}
	}
}

is_egalitarian = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_egalitarian
				has_ethic = ethic_egalitarian
			}
		}
		custom_tooltip = st_is_egalitarian_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_egalitarian_any"
			always = no
		}
	}
}
is_authoritarian = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_authoritarian
				has_ethic = ethic_authoritarian
			}
		}
		custom_tooltip = st_is_authoritarian_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_authoritarian_any"
			always = no
		}
	}
}

is_xenophile = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_xenophile
				has_ethic = ethic_xenophile
			}
		}
		custom_tooltip = st_is_xenophile_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_xenophile_any"
			always = no
		}
	}
}
is_xenophobe = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_xenophobe
				has_ethic = ethic_xenophobe
			}
		}
		custom_tooltip = st_is_xenophobe_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_xenophobe_any"
			always = no
		}
	}
}

is_socialism = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_socialism
				has_ethic = ethic_socialism
			}
		}
		custom_tooltip = st_is_socialism_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_socialism_any"
			always = no
		}
	}
}
is_capitalism = {
	if = {
		limit = {
			OR = {
				has_ethic = ethic_fanatic_capitalism
				has_ethic = ethic_capitalism
				has_valid_civic = civic_characteristic_socialism_pioneer
			}
		}
		custom_tooltip = st_is_capitalism_any
	}
	else = {
		custom_tooltip = {
			fail_text = "st_is_capitalism_any"
			always = no
		}
	}
}

has_any_ethic = {
	OR = {
		has_ethic = ethic_authoritarian
		has_ethic = ethic_egalitarian
		has_ethic = ethic_xenophile
		has_ethic = ethic_xenophobe
		has_ethic = ethic_materialist
		has_ethic = ethic_spiritualist
		has_ethic = ethic_militarist
		has_ethic = ethic_pacifist
		has_ethic = ethic_socialism
		has_ethic = ethic_capitalism
	}
}

leader_has_empire_ethic = {
	OR = {
		AND = {
			has_ethic = ethic_pacifist
			owner = { is_pacifist = yes }
		}
		AND = {
			has_ethic = ethic_militarist
			owner = { is_militarist = yes }
		}
		AND = {
			has_ethic = ethic_xenophile
			owner = { is_xenophile = yes }
		}
		AND = {
			has_ethic = ethic_xenophobe
			owner = { is_xenophobe = yes }
		}
		AND = {
			has_ethic = ethic_egalitarian
			owner = { is_egalitarian = yes }
		}
		AND = {
			has_ethic = ethic_authoritarian
			owner = { is_authoritarian = yes }
		}
		AND = {
			has_ethic = ethic_spiritualist
			owner = { is_spiritualist = yes }
		}
		AND = {
			has_ethic = ethic_materialist
			owner = { is_materialist = yes }
		}
		AND = {
			has_ethic = ethic_socialism
			owner = { is_socialism = yes }
		}
		AND = {
			has_ethic = ethic_capitalism
			owner = { is_capitalism = yes }
		}
	}
}

has_miltary_background_job = {
	OR = {
		has_background_job = commandante
		has_background_job = noble
		has_background_job = knight_commander
		has_background_job = death_priest
		has_background_job = duelist
		has_background_job = knight
		has_background_job = templar
		has_background_job = death_knight
		has_background_job = soldier
		has_background_job = mercenary
		has_background_job = enforcer
		has_background_job = telepath
		has_background_job = necromancer
		has_background_job = magician
		has_background_job = squire
		has_background_job = conscript_uncapped
		has_background_job = gladiator
		has_background_job = conscript
	}
}

is_duelist_country = {
	OR = {
		has_valid_civic = civic_warrior_culture
		has_valid_civic = civic_sparta_spirit
	}
}

##允许开分公司的国家
can_build_branch_offices_trigger = {
	OR = {
		has_authority = auth_corporate
		has_civic = civic_galactic_sovereign_megacorp

		#	ETCPM
		has_authority = auth_private
		#	hiveDLC
		has_valid_civic = civic_mutualistic_behavior
		has_valid_civic = civic_machine_trading
		#	MCA
		has_authority = auth_corporate_fiefdom
		has_authority = auth_cooperative
		#	驴岛
		has_civic = civic_business_union
		#	wsg
		has_authority = auth_warshipgirls
		AND = {
			has_authority = auth_shenhai
			OR = {
				has_country_flag = pantsu_shop_origin
				has_civic = civic_sh_criminal_syndicate
			}
		}
		#	GF
		has_civic = civic_gk
		has_civic = GF_civic_GK
		#	azl
		has_authority = auth_azur_lane_0
		has_authority = auth_azur_lane_1
		has_authority = auth_azur_lane_2
		has_authority = auth_azur_lane_K
		#	azlr
		AND = {
			exists = event_target:elizabeth_leader
			has_country_flag = azur_lane_leader_elizabeth
		}
		#	多彩
		has_authority = auth_brothel
		#	莉莉
		has_authority = auth_AL_democratic
		has_authority = auth_AL_arsenal
		#	久远
		KZ_VOY_can_build_branch_offices = yes
		#	星海帝皇	=|义军同盟|
		is_country_type = rebel_allience
		#	ARP
		has_authority = auth_Arp_0

		#_|Ecar|
		AND = {
			has_global_flag = ideological_revolution	# |Ecar激活|
			OR = {
				has_civic = civic_family_business
				has_civic = civic_world_cooperative
				has_valid_civic = civic_state_owned_enterprises
				has_valid_civic = civic_corporate_dominion
				has_valid_civic = civic_underworld_society
				has_valid_civic = civic_merchant_guilds
				has_valid_civic = civic_state_monopoly
				has_valid_civic = civic_glory_and_dream
				has_valid_civic = civic_machine_financial_investment
				has_active_tradition = tr_future_economy_soc
				AND = {
					has_ethic = ethic_fanatic_capitalism
					has_active_tradition = tr_future_economy
				}
			}
		}

		#	rmaid		=|外派服务飞升|
		has_ascension_perk = ap_expactriate_service
	}
}

##支持企业建筑的国家
can_support_branch_offices_trigger = {
	##_|禁止_国家类型|
	NOR = {
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire

		## 禁止所有|堕落帝国|	############
		# ev
		is_country_type = fallen_empire_ev
		# 阿夸
		is_country_type = kuat_fallen_empire
		is_country_type = kuat_awakened_fallen_empire
		is_country_type = awakened_return_kuat_empire
		# HFE	hfe_civic_egypt_fury|国策|决定是否是afe
		is_country_type = human_fallen_empire
		# 致命风暴	|afe|
		is_country_type = awakened_gate_builders
		# ZOFE
		is_country_type = ascended_empire
		is_country_type = lost_empire
		# SOFE
		is_progenitor_empires = yes
		is_country_type = sofe_light_seeker
		# EE
		is_country_type = eternal_empire
		# 莉莉
		is_country_type = al_fallen_empire

		## 禁止其他|特殊国家|	############
		# azlr
		has_authority = auth_azur_dictatorial
	}
	##_|禁止_巨企| +AAR		/ETCPM/hiveDLC/MCA/驴岛/wsg		/GF/azl/SOFE	/Ecar
	OR = {
		## 特殊允许|企业政府|	############
		# AAR
		is_subject_with_preset = { PRESET = AAR_SBJ_subsidiary }
		# Ecar
		AND = {
			has_global_flag = ideological_revolution	# |Ecar激活|
			OR = {
				has_tradition = tr_future_economy
				has_civic = civic_world_cooperative
				has_valid_civic = civic_criminal_heritage
				has_civic = civic_galactic_megacorp
				has_civic = civic_galactic_sovereign
				has_civic = civic_galactic_sovereign_megacorp
				has_civic = civic_galactic_sovereign_people
			}
		}

		## 禁止所有|企业政府|	############
		NOR = {
			has_authority = auth_corporate
			has_civic = civic_galactic_sovereign_megacorp

			#_|巨企国家|	ETCPM/hiveDLC/MCA/驴岛/wsg
			# ETCPM
			has_authority = auth_private
			# hiveDLC
			has_valid_civic = civic_mutualistic_behavior
			has_valid_civic = civic_machine_trading
			# MCA
			has_authority = auth_corporate_fiefdom
			has_authority = auth_cooperative
			# 驴岛
			has_civic = civic_business_union
			# wsg
			has_authority = auth_warshipgirls

			AND = {
				has_authority = auth_shenhai
				OR = {
					has_country_flag = pantsu_shop_origin
					has_civic = civic_sh_criminal_syndicate
				}
			}
			# GF
			has_civic = civic_gk
			has_civic = GF_civic_GK
			# azl
			has_authority = auth_azur_lane_1
			# SOFE
			has_valid_civic = civic_sofe_inner_strength
		}
	}

	##_|必要国家类型|	 +ZOFE
	OR = {
		# vanilla
		is_regular_empire = yes
		# +ZOFE
		AND = {
			is_gestalt = no
			is_country_type = ascended_empire
		}
	}
}

#是研究者岗位
has_research_job = {
	has_job = researcher
	has_job = brain_drone
	has_job = calculator
	has_job = dimensional_portal_researcher
	has_job = dimensional_portal_researcher_gestalt
	has_job = space_time_anomaly_researcher
	has_job = space_time_anomaly_researcher_gestalt
	has_job = magician
	has_job = legendary_mage
	has_job = necromancer
	has_job = xeno_zoo_keeper
	has_job = head_researcher
}